# 프로젝트 개요
이 프로젝트는 Spring Boot와 React Native, Python(TensorFlow)을 사용하여 구현됩니다. 주요 기능은 다음과 같습니다:

1. **카카오 책 검색 API**를 활용한 도서 검색 기능
2. **카카오 지도 API**를 활용한 공공 도서관 위치 표시
3. **사용자 로그인 API** (일반 로그인 및 카카오 로그인 지원)
4. **TensorFlow**를 활용한 추천 알고리즘 구현
5. **검색한 도서를 보유한 도서관 위치 추천**

---

## 기술 스택
### 백엔드
- **Spring Boot** (Gradle 기반)
- 주요 기능:
  - 사용자 인증 및 권한 관리 (JWT 사용)
  - 카카오 API 연동 (책 검색, 지도)
  - 데이터베이스 관리 (MySQL)

### 프론트엔드
- **React Native**
- 주요 기능:
  - 모바일 UI/UX
  - API 호출 및 데이터 시각화
  - 로그인 화면 및 도서 검색 화면 구현

### 머신러닝
- **Python + TensorFlow**
- 주요 기능:
  - 사용자 선호도 기반 추천 알고리즘
  - 검색 데이터 분석 및 맞춤형 추천 제공

---

## 주요 기능

### 1. 도서 검색
- 카카오 책 검색 API를 사용하여 사용자가 원하는 책을 검색할 수 있는 기능
- 검색된 도서를 선택하면 도서 상세 정보 및 관련 도서 추천 제공

### 2. 지도에 도서관 표시
- 카카오 지도 API를 사용하여 도서관 위치를 지도에 표시
- 사용자가 선택한 도서와 관련된 도서관 표시

### 3. 사용자 인증
- 이메일/비밀번호 기반 일반 로그인
- 카카오 로그인 지원
- JWT를 사용한 세션 관리

### 4. 추천 시스템
- TensorFlow 기반 머신러닝 모델로 사용자 행동 데이터를 분석
- 맞춤형 도서 추천 제공

### 5. 검색한 도서를 보유한 도서관 위치 추천
- 사용자가 검색한 도서를 실제 보유한 도서관을 추천
- 카카오 지도 API를 활용하여 해당 도서관의 위치를 표시

---

## 아키텍처
### 1. Spring Boot
- **API 계층**: React Native와 통신하며 데이터 제공
- **비즈니스 로직 계층**: 데이터 처리 및 추천 알고리즘 호출
- **데이터 계층**: MySQL 데이터베이스와 연결

### 2. React Native
- 사용자 인터페이스 제공
- 검색 결과 및 추천 결과 표시
- 로그인 및 인증 관리

### 3. Python (TensorFlow)
- Spring Boot에서 TensorFlow 모델 호출
- 사용자 데이터를 기반으로 도서 추천

---

## 개발 계획
1. **환경 설정**
   - Spring Boot, React Native, TensorFlow 개발 환경 구성
   - 카카오 API 키 발급 및 설정

2. **기능 개발**
   - 도서 검색 및 지도 연동
   - 사용자 인증 및 권한 관리
   - 추천 시스템 구현
   - 도서관 위치 추천 기능 구현

3. **테스트 및 배포**
   - 유닛 테스트 및 통합 테스트 진행
   - Docker를 활용한 배포 환경 구성

---

## 데이터베이스 설계
- **users**: 사용자 정보 (id, email, password, role)
- **books**: 도서 정보 (id, title, author, isbn)
- **recommendations**: 추천 정보 (id, user_id, book_id, score)
- **libraries**: 도서관 정보 (id, name, address, coordinates)
- **library_books**: 도서관 보유 도서 정보 (library_id, book_id)

---

## 예상 결과물
- 사용자가 도서를 검색하고 관련 도서관 위치를 확인할 수 있는 모바일 앱
- 개인 맞춤형 도서 추천 시스템
- 검색한 도서를 보유한 도서관 위치 추천 기능
- 간편한 로그인 및 회원 관리 시스템
